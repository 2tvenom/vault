version: "2.1"
executors:
  builder:
    docker:
      - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: 3f7e852080f9b3597d00255a0cfc6b9af2b62a91
  builder-machine:
    resource_class: xlarge
    machine:
      image: ubuntu-1604:202007-01
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: 3f7e852080f9b3597d00255a0cfc6b9af2b62a91
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: build-ui_c0c1_{{checksum ".buildcache/cache-keys/build-ui-c0c18cf205eaf5d086df0541b933590c0454d50f"}}
          keys:
            - ui-dependencies_e326_{{checksum ".buildcache/cache-keys/ui-dependencies-e32637cb0eddbb636aaba43367db03df2b6c8228"}}
            - install-yarn_d8f0_{{checksum ".buildcache/cache-keys/install-yarn-d8f06ad14416849abce755043d691e698bd16d6a"}}
            - set-workdir_a823_{{checksum ".buildcache/cache-keys/set-workdir-a8232400e220adcccbb9c45a41542b9497d0d21f"}}
            - install-go-tools_c0f5_{{checksum ".buildcache/cache-keys/install-go-tools-c0f572164cd4805f2bcf77664d7e02c169682491"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Layer Cache: build-ui'
      - run:
          command: LAYER_SPEC_ID=06-build-ui-c0c18cf205eaf5d086df0541b933590c0454d50f make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-c6cdf1b224722d2520e082320f2a71875913247c-image
          name: Build base layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-install-go-f39f5d66161bdd79b182943a3accdd95510c4812-image
          name: Build install-go layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-install-go-tools-c0f572164cd4805f2bcf77664d7e02c169682491-image
          name: Build install-go-tools layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-set-workdir-a8232400e220adcccbb9c45a41542b9497d0d21f-image
          name: Build set-workdir layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 04-install-yarn-d8f06ad14416849abce755043d691e698bd16d6a-image
          name: Build install-yarn layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 05-ui-dependencies-e32637cb0eddbb636aaba43367db03df2b6c8228-image
          name: Build ui-dependencies layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 06-build-ui-c0c18cf205eaf5d086df0541b933590c0454d50f-image
          name: Build build-ui layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 06-build-ui-c0c18cf205eaf5d086df0541b933590c0454d50f-save
          name: Build build-ui layer
      - save_cache:
          paths:
            - .buildcache/archives/06-build-ui-c0c18cf205eaf5d086df0541b933590c0454d50f.tar.gz
          key: build-ui_c0c1_{{checksum ".buildcache/cache-keys/build-ui-c0c18cf205eaf5d086df0541b933590c0454d50f"}}
          name: 'Save Layer Cache: build-ui'
  bundle-releases:
    executor: builder
    steps:
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-all-package-cache-keys
          name: Write all package cache keys
      - run:
          command: mkdir -p .buildcache && echo "*" > .buildcache/.gitignore
          name: Ignore .buildcache
      - restore_cache:
          key: package-022f6dbadee875e5298838a94d6f1b9ea0318e61-{{checksum ".buildcache/cache-keys/package-022f6dbadee875e5298838a94d6f1b9ea0318e61"}}
          name: Restore package cache
      - restore_cache:
          key: package-fdcc991d04999f1be4ac64e55e4696ce44cada70-{{checksum ".buildcache/cache-keys/package-fdcc991d04999f1be4ac64e55e4696ce44cada70"}}
          name: Restore package cache
      - restore_cache:
          key: package-ba707ed8f16e22b775e27ea8e15dfcf13fed7c8a-{{checksum ".buildcache/cache-keys/package-ba707ed8f16e22b775e27ea8e15dfcf13fed7c8a"}}
          name: Restore package cache
      - restore_cache:
          key: package-5423cdd65c4fcfd45d2165de02ac39a28d457ff9-{{checksum ".buildcache/cache-keys/package-5423cdd65c4fcfd45d2165de02ac39a28d457ff9"}}
          name: Restore package cache
      - restore_cache:
          key: package-975bbb1c245b6c9821bdcf81d34924d6224aedf1-{{checksum ".buildcache/cache-keys/package-975bbb1c245b6c9821bdcf81d34924d6224aedf1"}}
          name: Restore package cache
      - restore_cache:
          key: package-36629e0c0cae60e5c8d868dad1f67eab97464e74-{{checksum ".buildcache/cache-keys/package-36629e0c0cae60e5c8d868dad1f67eab97464e74"}}
          name: Restore package cache
      - restore_cache:
          key: package-36a710975c22e8e29db12343c8057db2ae8f2821-{{checksum ".buildcache/cache-keys/package-36a710975c22e8e29db12343c8057db2ae8f2821"}}
          name: Restore package cache
      - restore_cache:
          key: package-514b658706dd0e51bcf190d4d091a83c8fbd16d7-{{checksum ".buildcache/cache-keys/package-514b658706dd0e51bcf190d4d091a83c8fbd16d7"}}
          name: Restore package cache
      - restore_cache:
          key: package-2fb65d6a95818aaf1a7ed356dc7140c5c6ebbfb2-{{checksum ".buildcache/cache-keys/package-2fb65d6a95818aaf1a7ed356dc7140c5c6ebbfb2"}}
          name: Restore package cache
      - restore_cache:
          key: package-53765b2857c4bb71f4f1830e9fa26ce2080d5161-{{checksum ".buildcache/cache-keys/package-53765b2857c4bb71f4f1830e9fa26ce2080d5161"}}
          name: Restore package cache
      - restore_cache:
          key: package-dc199821a5e99285a6a9c5a7a1f7496f4869bb48-{{checksum ".buildcache/cache-keys/package-dc199821a5e99285a6a9c5a7a1f7496f4869bb48"}}
          name: Restore package cache
      - restore_cache:
          key: package-1b4736cf3b02aec5755d3ee09e6b1ca19c9a6b3e-{{checksum ".buildcache/cache-keys/package-1b4736cf3b02aec5755d3ee09e6b1ca19c9a6b3e"}}
          name: Restore package cache
      - restore_cache:
          key: package-9050ea00aea51c531e6fa24ab6c122184394137a-{{checksum ".buildcache/cache-keys/package-9050ea00aea51c531e6fa24ab6c122184394137a"}}
          name: Restore package cache
      - restore_cache:
          key: package-acad3d870885b3c338a0135c6859c7ab8e3f1e36-{{checksum ".buildcache/cache-keys/package-acad3d870885b3c338a0135c6859c7ab8e3f1e36"}}
          name: Restore package cache
      - restore_cache:
          key: package-7428665306bfee4d11f7333b809be5047fa1c7f2-{{checksum ".buildcache/cache-keys/package-7428665306bfee4d11f7333b809be5047fa1c7f2"}}
          name: Restore package cache
      - run:
          command: make package-meta-all
          name: Write Package Metadata
      - run:
          command: make aliases
          name: Write package aliases
      - run:
          command: ls -lahR .buildcache
          name: List Build Cache
      - run:
          command: cp packages*.lock/pkgs.yml lockfile-3f7e852080f9b3597d00255a0cfc6b9af2b62a91-46759b14812b11fe.yml
          name: Update Lockfile Name
      - run:
          command: tar -czf packages-3f7e852080f9b3597d00255a0cfc6b9af2b62a91-46759b14812b11fe.tar.gz .buildcache/packages lockfile-3f7e852080f9b3597d00255a0cfc6b9af2b62a91-46759b14812b11fe.yml
          name: Create Raw Package Tarball
      - run:
          command: tar -czf meta-3f7e852080f9b3597d00255a0cfc6b9af2b62a91-46759b14812b11fe.tar.gz .buildcache/packages/store/*.json lockfile-3f7e852080f9b3597d00255a0cfc6b9af2b62a91-46759b14812b11fe.yml
          name: Create Metadata Tarball
      - store_artifacts:
          path: lockfile-3f7e852080f9b3597d00255a0cfc6b9af2b62a91-46759b14812b11fe.yml
      - store_artifacts:
          path: packages-3f7e852080f9b3597d00255a0cfc6b9af2b62a91-46759b14812b11fe.tar.gz
      - store_artifacts:
          path: meta-3f7e852080f9b3597d00255a0cfc6b9af2b62a91-46759b14812b11fe.tar.gz
      - run:
          command: mv ".buildcache/packages" "packages-3f7e852080f9b3597d00255a0cfc6b9af2b62a91-46759b14812b11fe"
          name: Update Custom Build Paths
      - store_artifacts:
          path: packages-3f7e852080f9b3597d00255a0cfc6b9af2b62a91-46759b14812b11fe
  darwin_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-022f6dbadee875e5298838a94d6f1b9ea0318e61-{{checksum ".buildcache/cache-keys/package-022f6dbadee875e5298838a94d6f1b9ea0318e61"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_3fa7_{{checksum ".buildcache/cache-keys/copy-source-3fa7c2ec774cfd3605418c089bab31a8552c7e7e"}}
          keys:
            - warm-go-build-vendor-cache_4339_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-4339590094cca89509c17741fd4ba687c9fa09ee"}}
            - build-static-assets_e23f_{{checksum ".buildcache/cache-keys/build-static-assets-e23f11958f5d6048adf70a68cab759daa7d4e9ec"}}
            - build-ui_c0c1_{{checksum ".buildcache/cache-keys/build-ui-c0c18cf205eaf5d086df0541b933590c0454d50f"}}
            - ui-dependencies_e326_{{checksum ".buildcache/cache-keys/ui-dependencies-e32637cb0eddbb636aaba43367db03df2b6c8228"}}
            - install-yarn_d8f0_{{checksum ".buildcache/cache-keys/install-yarn-d8f06ad14416849abce755043d691e698bd16d6a"}}
            - set-workdir_a823_{{checksum ".buildcache/cache-keys/set-workdir-a8232400e220adcccbb9c45a41542b9497d0d21f"}}
            - install-go-tools_c0f5_{{checksum ".buildcache/cache-keys/install-go-tools-c0f572164cd4805f2bcf77664d7e02c169682491"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-022f6dbadee875e5298838a94d6f1b9ea0318e61-{{checksum ".buildcache/cache-keys/package-022f6dbadee875e5298838a94d6f1b9ea0318e61"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 022f6dbadee875e5298838a94d6f1b9ea0318e61
  freebsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-fdcc991d04999f1be4ac64e55e4696ce44cada70-{{checksum ".buildcache/cache-keys/package-fdcc991d04999f1be4ac64e55e4696ce44cada70"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_3fa7_{{checksum ".buildcache/cache-keys/copy-source-3fa7c2ec774cfd3605418c089bab31a8552c7e7e"}}
          keys:
            - warm-go-build-vendor-cache_4339_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-4339590094cca89509c17741fd4ba687c9fa09ee"}}
            - build-static-assets_e23f_{{checksum ".buildcache/cache-keys/build-static-assets-e23f11958f5d6048adf70a68cab759daa7d4e9ec"}}
            - build-ui_c0c1_{{checksum ".buildcache/cache-keys/build-ui-c0c18cf205eaf5d086df0541b933590c0454d50f"}}
            - ui-dependencies_e326_{{checksum ".buildcache/cache-keys/ui-dependencies-e32637cb0eddbb636aaba43367db03df2b6c8228"}}
            - install-yarn_d8f0_{{checksum ".buildcache/cache-keys/install-yarn-d8f06ad14416849abce755043d691e698bd16d6a"}}
            - set-workdir_a823_{{checksum ".buildcache/cache-keys/set-workdir-a8232400e220adcccbb9c45a41542b9497d0d21f"}}
            - install-go-tools_c0f5_{{checksum ".buildcache/cache-keys/install-go-tools-c0f572164cd4805f2bcf77664d7e02c169682491"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-fdcc991d04999f1be4ac64e55e4696ce44cada70-{{checksum ".buildcache/cache-keys/package-fdcc991d04999f1be4ac64e55e4696ce44cada70"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: fdcc991d04999f1be4ac64e55e4696ce44cada70
  freebsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-ba707ed8f16e22b775e27ea8e15dfcf13fed7c8a-{{checksum ".buildcache/cache-keys/package-ba707ed8f16e22b775e27ea8e15dfcf13fed7c8a"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_3fa7_{{checksum ".buildcache/cache-keys/copy-source-3fa7c2ec774cfd3605418c089bab31a8552c7e7e"}}
          keys:
            - warm-go-build-vendor-cache_4339_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-4339590094cca89509c17741fd4ba687c9fa09ee"}}
            - build-static-assets_e23f_{{checksum ".buildcache/cache-keys/build-static-assets-e23f11958f5d6048adf70a68cab759daa7d4e9ec"}}
            - build-ui_c0c1_{{checksum ".buildcache/cache-keys/build-ui-c0c18cf205eaf5d086df0541b933590c0454d50f"}}
            - ui-dependencies_e326_{{checksum ".buildcache/cache-keys/ui-dependencies-e32637cb0eddbb636aaba43367db03df2b6c8228"}}
            - install-yarn_d8f0_{{checksum ".buildcache/cache-keys/install-yarn-d8f06ad14416849abce755043d691e698bd16d6a"}}
            - set-workdir_a823_{{checksum ".buildcache/cache-keys/set-workdir-a8232400e220adcccbb9c45a41542b9497d0d21f"}}
            - install-go-tools_c0f5_{{checksum ".buildcache/cache-keys/install-go-tools-c0f572164cd4805f2bcf77664d7e02c169682491"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-ba707ed8f16e22b775e27ea8e15dfcf13fed7c8a-{{checksum ".buildcache/cache-keys/package-ba707ed8f16e22b775e27ea8e15dfcf13fed7c8a"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: ba707ed8f16e22b775e27ea8e15dfcf13fed7c8a
  freebsd_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-5423cdd65c4fcfd45d2165de02ac39a28d457ff9-{{checksum ".buildcache/cache-keys/package-5423cdd65c4fcfd45d2165de02ac39a28d457ff9"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_3fa7_{{checksum ".buildcache/cache-keys/copy-source-3fa7c2ec774cfd3605418c089bab31a8552c7e7e"}}
          keys:
            - warm-go-build-vendor-cache_4339_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-4339590094cca89509c17741fd4ba687c9fa09ee"}}
            - build-static-assets_e23f_{{checksum ".buildcache/cache-keys/build-static-assets-e23f11958f5d6048adf70a68cab759daa7d4e9ec"}}
            - build-ui_c0c1_{{checksum ".buildcache/cache-keys/build-ui-c0c18cf205eaf5d086df0541b933590c0454d50f"}}
            - ui-dependencies_e326_{{checksum ".buildcache/cache-keys/ui-dependencies-e32637cb0eddbb636aaba43367db03df2b6c8228"}}
            - install-yarn_d8f0_{{checksum ".buildcache/cache-keys/install-yarn-d8f06ad14416849abce755043d691e698bd16d6a"}}
            - set-workdir_a823_{{checksum ".buildcache/cache-keys/set-workdir-a8232400e220adcccbb9c45a41542b9497d0d21f"}}
            - install-go-tools_c0f5_{{checksum ".buildcache/cache-keys/install-go-tools-c0f572164cd4805f2bcf77664d7e02c169682491"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-5423cdd65c4fcfd45d2165de02ac39a28d457ff9-{{checksum ".buildcache/cache-keys/package-5423cdd65c4fcfd45d2165de02ac39a28d457ff9"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 5423cdd65c4fcfd45d2165de02ac39a28d457ff9
  linux_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-975bbb1c245b6c9821bdcf81d34924d6224aedf1-{{checksum ".buildcache/cache-keys/package-975bbb1c245b6c9821bdcf81d34924d6224aedf1"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_3fa7_{{checksum ".buildcache/cache-keys/copy-source-3fa7c2ec774cfd3605418c089bab31a8552c7e7e"}}
          keys:
            - warm-go-build-vendor-cache_4339_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-4339590094cca89509c17741fd4ba687c9fa09ee"}}
            - build-static-assets_e23f_{{checksum ".buildcache/cache-keys/build-static-assets-e23f11958f5d6048adf70a68cab759daa7d4e9ec"}}
            - build-ui_c0c1_{{checksum ".buildcache/cache-keys/build-ui-c0c18cf205eaf5d086df0541b933590c0454d50f"}}
            - ui-dependencies_e326_{{checksum ".buildcache/cache-keys/ui-dependencies-e32637cb0eddbb636aaba43367db03df2b6c8228"}}
            - install-yarn_d8f0_{{checksum ".buildcache/cache-keys/install-yarn-d8f06ad14416849abce755043d691e698bd16d6a"}}
            - set-workdir_a823_{{checksum ".buildcache/cache-keys/set-workdir-a8232400e220adcccbb9c45a41542b9497d0d21f"}}
            - install-go-tools_c0f5_{{checksum ".buildcache/cache-keys/install-go-tools-c0f572164cd4805f2bcf77664d7e02c169682491"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-975bbb1c245b6c9821bdcf81d34924d6224aedf1-{{checksum ".buildcache/cache-keys/package-975bbb1c245b6c9821bdcf81d34924d6224aedf1"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 975bbb1c245b6c9821bdcf81d34924d6224aedf1
  linux_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-36629e0c0cae60e5c8d868dad1f67eab97464e74-{{checksum ".buildcache/cache-keys/package-36629e0c0cae60e5c8d868dad1f67eab97464e74"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_3fa7_{{checksum ".buildcache/cache-keys/copy-source-3fa7c2ec774cfd3605418c089bab31a8552c7e7e"}}
          keys:
            - warm-go-build-vendor-cache_4339_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-4339590094cca89509c17741fd4ba687c9fa09ee"}}
            - build-static-assets_e23f_{{checksum ".buildcache/cache-keys/build-static-assets-e23f11958f5d6048adf70a68cab759daa7d4e9ec"}}
            - build-ui_c0c1_{{checksum ".buildcache/cache-keys/build-ui-c0c18cf205eaf5d086df0541b933590c0454d50f"}}
            - ui-dependencies_e326_{{checksum ".buildcache/cache-keys/ui-dependencies-e32637cb0eddbb636aaba43367db03df2b6c8228"}}
            - install-yarn_d8f0_{{checksum ".buildcache/cache-keys/install-yarn-d8f06ad14416849abce755043d691e698bd16d6a"}}
            - set-workdir_a823_{{checksum ".buildcache/cache-keys/set-workdir-a8232400e220adcccbb9c45a41542b9497d0d21f"}}
            - install-go-tools_c0f5_{{checksum ".buildcache/cache-keys/install-go-tools-c0f572164cd4805f2bcf77664d7e02c169682491"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-36629e0c0cae60e5c8d868dad1f67eab97464e74-{{checksum ".buildcache/cache-keys/package-36629e0c0cae60e5c8d868dad1f67eab97464e74"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 36629e0c0cae60e5c8d868dad1f67eab97464e74
  linux_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-36a710975c22e8e29db12343c8057db2ae8f2821-{{checksum ".buildcache/cache-keys/package-36a710975c22e8e29db12343c8057db2ae8f2821"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_3fa7_{{checksum ".buildcache/cache-keys/copy-source-3fa7c2ec774cfd3605418c089bab31a8552c7e7e"}}
          keys:
            - warm-go-build-vendor-cache_4339_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-4339590094cca89509c17741fd4ba687c9fa09ee"}}
            - build-static-assets_e23f_{{checksum ".buildcache/cache-keys/build-static-assets-e23f11958f5d6048adf70a68cab759daa7d4e9ec"}}
            - build-ui_c0c1_{{checksum ".buildcache/cache-keys/build-ui-c0c18cf205eaf5d086df0541b933590c0454d50f"}}
            - ui-dependencies_e326_{{checksum ".buildcache/cache-keys/ui-dependencies-e32637cb0eddbb636aaba43367db03df2b6c8228"}}
            - install-yarn_d8f0_{{checksum ".buildcache/cache-keys/install-yarn-d8f06ad14416849abce755043d691e698bd16d6a"}}
            - set-workdir_a823_{{checksum ".buildcache/cache-keys/set-workdir-a8232400e220adcccbb9c45a41542b9497d0d21f"}}
            - install-go-tools_c0f5_{{checksum ".buildcache/cache-keys/install-go-tools-c0f572164cd4805f2bcf77664d7e02c169682491"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-36a710975c22e8e29db12343c8057db2ae8f2821-{{checksum ".buildcache/cache-keys/package-36a710975c22e8e29db12343c8057db2ae8f2821"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 36a710975c22e8e29db12343c8057db2ae8f2821
  linux_arm64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-514b658706dd0e51bcf190d4d091a83c8fbd16d7-{{checksum ".buildcache/cache-keys/package-514b658706dd0e51bcf190d4d091a83c8fbd16d7"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_3fa7_{{checksum ".buildcache/cache-keys/copy-source-3fa7c2ec774cfd3605418c089bab31a8552c7e7e"}}
          keys:
            - warm-go-build-vendor-cache_4339_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-4339590094cca89509c17741fd4ba687c9fa09ee"}}
            - build-static-assets_e23f_{{checksum ".buildcache/cache-keys/build-static-assets-e23f11958f5d6048adf70a68cab759daa7d4e9ec"}}
            - build-ui_c0c1_{{checksum ".buildcache/cache-keys/build-ui-c0c18cf205eaf5d086df0541b933590c0454d50f"}}
            - ui-dependencies_e326_{{checksum ".buildcache/cache-keys/ui-dependencies-e32637cb0eddbb636aaba43367db03df2b6c8228"}}
            - install-yarn_d8f0_{{checksum ".buildcache/cache-keys/install-yarn-d8f06ad14416849abce755043d691e698bd16d6a"}}
            - set-workdir_a823_{{checksum ".buildcache/cache-keys/set-workdir-a8232400e220adcccbb9c45a41542b9497d0d21f"}}
            - install-go-tools_c0f5_{{checksum ".buildcache/cache-keys/install-go-tools-c0f572164cd4805f2bcf77664d7e02c169682491"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-514b658706dd0e51bcf190d4d091a83c8fbd16d7-{{checksum ".buildcache/cache-keys/package-514b658706dd0e51bcf190d4d091a83c8fbd16d7"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 514b658706dd0e51bcf190d4d091a83c8fbd16d7
  netbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-2fb65d6a95818aaf1a7ed356dc7140c5c6ebbfb2-{{checksum ".buildcache/cache-keys/package-2fb65d6a95818aaf1a7ed356dc7140c5c6ebbfb2"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_3fa7_{{checksum ".buildcache/cache-keys/copy-source-3fa7c2ec774cfd3605418c089bab31a8552c7e7e"}}
          keys:
            - warm-go-build-vendor-cache_4339_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-4339590094cca89509c17741fd4ba687c9fa09ee"}}
            - build-static-assets_e23f_{{checksum ".buildcache/cache-keys/build-static-assets-e23f11958f5d6048adf70a68cab759daa7d4e9ec"}}
            - build-ui_c0c1_{{checksum ".buildcache/cache-keys/build-ui-c0c18cf205eaf5d086df0541b933590c0454d50f"}}
            - ui-dependencies_e326_{{checksum ".buildcache/cache-keys/ui-dependencies-e32637cb0eddbb636aaba43367db03df2b6c8228"}}
            - install-yarn_d8f0_{{checksum ".buildcache/cache-keys/install-yarn-d8f06ad14416849abce755043d691e698bd16d6a"}}
            - set-workdir_a823_{{checksum ".buildcache/cache-keys/set-workdir-a8232400e220adcccbb9c45a41542b9497d0d21f"}}
            - install-go-tools_c0f5_{{checksum ".buildcache/cache-keys/install-go-tools-c0f572164cd4805f2bcf77664d7e02c169682491"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-2fb65d6a95818aaf1a7ed356dc7140c5c6ebbfb2-{{checksum ".buildcache/cache-keys/package-2fb65d6a95818aaf1a7ed356dc7140c5c6ebbfb2"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 2fb65d6a95818aaf1a7ed356dc7140c5c6ebbfb2
  netbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-53765b2857c4bb71f4f1830e9fa26ce2080d5161-{{checksum ".buildcache/cache-keys/package-53765b2857c4bb71f4f1830e9fa26ce2080d5161"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_3fa7_{{checksum ".buildcache/cache-keys/copy-source-3fa7c2ec774cfd3605418c089bab31a8552c7e7e"}}
          keys:
            - warm-go-build-vendor-cache_4339_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-4339590094cca89509c17741fd4ba687c9fa09ee"}}
            - build-static-assets_e23f_{{checksum ".buildcache/cache-keys/build-static-assets-e23f11958f5d6048adf70a68cab759daa7d4e9ec"}}
            - build-ui_c0c1_{{checksum ".buildcache/cache-keys/build-ui-c0c18cf205eaf5d086df0541b933590c0454d50f"}}
            - ui-dependencies_e326_{{checksum ".buildcache/cache-keys/ui-dependencies-e32637cb0eddbb636aaba43367db03df2b6c8228"}}
            - install-yarn_d8f0_{{checksum ".buildcache/cache-keys/install-yarn-d8f06ad14416849abce755043d691e698bd16d6a"}}
            - set-workdir_a823_{{checksum ".buildcache/cache-keys/set-workdir-a8232400e220adcccbb9c45a41542b9497d0d21f"}}
            - install-go-tools_c0f5_{{checksum ".buildcache/cache-keys/install-go-tools-c0f572164cd4805f2bcf77664d7e02c169682491"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-53765b2857c4bb71f4f1830e9fa26ce2080d5161-{{checksum ".buildcache/cache-keys/package-53765b2857c4bb71f4f1830e9fa26ce2080d5161"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 53765b2857c4bb71f4f1830e9fa26ce2080d5161
  openbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-dc199821a5e99285a6a9c5a7a1f7496f4869bb48-{{checksum ".buildcache/cache-keys/package-dc199821a5e99285a6a9c5a7a1f7496f4869bb48"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_3fa7_{{checksum ".buildcache/cache-keys/copy-source-3fa7c2ec774cfd3605418c089bab31a8552c7e7e"}}
          keys:
            - warm-go-build-vendor-cache_4339_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-4339590094cca89509c17741fd4ba687c9fa09ee"}}
            - build-static-assets_e23f_{{checksum ".buildcache/cache-keys/build-static-assets-e23f11958f5d6048adf70a68cab759daa7d4e9ec"}}
            - build-ui_c0c1_{{checksum ".buildcache/cache-keys/build-ui-c0c18cf205eaf5d086df0541b933590c0454d50f"}}
            - ui-dependencies_e326_{{checksum ".buildcache/cache-keys/ui-dependencies-e32637cb0eddbb636aaba43367db03df2b6c8228"}}
            - install-yarn_d8f0_{{checksum ".buildcache/cache-keys/install-yarn-d8f06ad14416849abce755043d691e698bd16d6a"}}
            - set-workdir_a823_{{checksum ".buildcache/cache-keys/set-workdir-a8232400e220adcccbb9c45a41542b9497d0d21f"}}
            - install-go-tools_c0f5_{{checksum ".buildcache/cache-keys/install-go-tools-c0f572164cd4805f2bcf77664d7e02c169682491"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-dc199821a5e99285a6a9c5a7a1f7496f4869bb48-{{checksum ".buildcache/cache-keys/package-dc199821a5e99285a6a9c5a7a1f7496f4869bb48"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: dc199821a5e99285a6a9c5a7a1f7496f4869bb48
  openbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-1b4736cf3b02aec5755d3ee09e6b1ca19c9a6b3e-{{checksum ".buildcache/cache-keys/package-1b4736cf3b02aec5755d3ee09e6b1ca19c9a6b3e"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_3fa7_{{checksum ".buildcache/cache-keys/copy-source-3fa7c2ec774cfd3605418c089bab31a8552c7e7e"}}
          keys:
            - warm-go-build-vendor-cache_4339_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-4339590094cca89509c17741fd4ba687c9fa09ee"}}
            - build-static-assets_e23f_{{checksum ".buildcache/cache-keys/build-static-assets-e23f11958f5d6048adf70a68cab759daa7d4e9ec"}}
            - build-ui_c0c1_{{checksum ".buildcache/cache-keys/build-ui-c0c18cf205eaf5d086df0541b933590c0454d50f"}}
            - ui-dependencies_e326_{{checksum ".buildcache/cache-keys/ui-dependencies-e32637cb0eddbb636aaba43367db03df2b6c8228"}}
            - install-yarn_d8f0_{{checksum ".buildcache/cache-keys/install-yarn-d8f06ad14416849abce755043d691e698bd16d6a"}}
            - set-workdir_a823_{{checksum ".buildcache/cache-keys/set-workdir-a8232400e220adcccbb9c45a41542b9497d0d21f"}}
            - install-go-tools_c0f5_{{checksum ".buildcache/cache-keys/install-go-tools-c0f572164cd4805f2bcf77664d7e02c169682491"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-1b4736cf3b02aec5755d3ee09e6b1ca19c9a6b3e-{{checksum ".buildcache/cache-keys/package-1b4736cf3b02aec5755d3ee09e6b1ca19c9a6b3e"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 1b4736cf3b02aec5755d3ee09e6b1ca19c9a6b3e
  solaris_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-9050ea00aea51c531e6fa24ab6c122184394137a-{{checksum ".buildcache/cache-keys/package-9050ea00aea51c531e6fa24ab6c122184394137a"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_3fa7_{{checksum ".buildcache/cache-keys/copy-source-3fa7c2ec774cfd3605418c089bab31a8552c7e7e"}}
          keys:
            - warm-go-build-vendor-cache_4339_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-4339590094cca89509c17741fd4ba687c9fa09ee"}}
            - build-static-assets_e23f_{{checksum ".buildcache/cache-keys/build-static-assets-e23f11958f5d6048adf70a68cab759daa7d4e9ec"}}
            - build-ui_c0c1_{{checksum ".buildcache/cache-keys/build-ui-c0c18cf205eaf5d086df0541b933590c0454d50f"}}
            - ui-dependencies_e326_{{checksum ".buildcache/cache-keys/ui-dependencies-e32637cb0eddbb636aaba43367db03df2b6c8228"}}
            - install-yarn_d8f0_{{checksum ".buildcache/cache-keys/install-yarn-d8f06ad14416849abce755043d691e698bd16d6a"}}
            - set-workdir_a823_{{checksum ".buildcache/cache-keys/set-workdir-a8232400e220adcccbb9c45a41542b9497d0d21f"}}
            - install-go-tools_c0f5_{{checksum ".buildcache/cache-keys/install-go-tools-c0f572164cd4805f2bcf77664d7e02c169682491"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-9050ea00aea51c531e6fa24ab6c122184394137a-{{checksum ".buildcache/cache-keys/package-9050ea00aea51c531e6fa24ab6c122184394137a"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 9050ea00aea51c531e6fa24ab6c122184394137a
  windows_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-acad3d870885b3c338a0135c6859c7ab8e3f1e36-{{checksum ".buildcache/cache-keys/package-acad3d870885b3c338a0135c6859c7ab8e3f1e36"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_3fa7_{{checksum ".buildcache/cache-keys/copy-source-3fa7c2ec774cfd3605418c089bab31a8552c7e7e"}}
          keys:
            - warm-go-build-vendor-cache_4339_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-4339590094cca89509c17741fd4ba687c9fa09ee"}}
            - build-static-assets_e23f_{{checksum ".buildcache/cache-keys/build-static-assets-e23f11958f5d6048adf70a68cab759daa7d4e9ec"}}
            - build-ui_c0c1_{{checksum ".buildcache/cache-keys/build-ui-c0c18cf205eaf5d086df0541b933590c0454d50f"}}
            - ui-dependencies_e326_{{checksum ".buildcache/cache-keys/ui-dependencies-e32637cb0eddbb636aaba43367db03df2b6c8228"}}
            - install-yarn_d8f0_{{checksum ".buildcache/cache-keys/install-yarn-d8f06ad14416849abce755043d691e698bd16d6a"}}
            - set-workdir_a823_{{checksum ".buildcache/cache-keys/set-workdir-a8232400e220adcccbb9c45a41542b9497d0d21f"}}
            - install-go-tools_c0f5_{{checksum ".buildcache/cache-keys/install-go-tools-c0f572164cd4805f2bcf77664d7e02c169682491"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-acad3d870885b3c338a0135c6859c7ab8e3f1e36-{{checksum ".buildcache/cache-keys/package-acad3d870885b3c338a0135c6859c7ab8e3f1e36"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: acad3d870885b3c338a0135c6859c7ab8e3f1e36
  windows_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-7428665306bfee4d11f7333b809be5047fa1c7f2-{{checksum ".buildcache/cache-keys/package-7428665306bfee4d11f7333b809be5047fa1c7f2"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_3fa7_{{checksum ".buildcache/cache-keys/copy-source-3fa7c2ec774cfd3605418c089bab31a8552c7e7e"}}
          keys:
            - warm-go-build-vendor-cache_4339_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-4339590094cca89509c17741fd4ba687c9fa09ee"}}
            - build-static-assets_e23f_{{checksum ".buildcache/cache-keys/build-static-assets-e23f11958f5d6048adf70a68cab759daa7d4e9ec"}}
            - build-ui_c0c1_{{checksum ".buildcache/cache-keys/build-ui-c0c18cf205eaf5d086df0541b933590c0454d50f"}}
            - ui-dependencies_e326_{{checksum ".buildcache/cache-keys/ui-dependencies-e32637cb0eddbb636aaba43367db03df2b6c8228"}}
            - install-yarn_d8f0_{{checksum ".buildcache/cache-keys/install-yarn-d8f06ad14416849abce755043d691e698bd16d6a"}}
            - set-workdir_a823_{{checksum ".buildcache/cache-keys/set-workdir-a8232400e220adcccbb9c45a41542b9497d0d21f"}}
            - install-go-tools_c0f5_{{checksum ".buildcache/cache-keys/install-go-tools-c0f572164cd4805f2bcf77664d7e02c169682491"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-7428665306bfee4d11f7333b809be5047fa1c7f2-{{checksum ".buildcache/cache-keys/package-7428665306bfee4d11f7333b809be5047fa1c7f2"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 7428665306bfee4d11f7333b809be5047fa1c7f2
workflows:
  build-3f7e852080f9b3597d00255a0cfc6b9af2b62a91-46759b14812b11fe:
    jobs:
      - build-common-layers: {}
      - darwin_amd64_package:
          requires:
            - build-common-layers
      - bundle-releases:
          requires:
            - darwin_amd64_package
            - freebsd_386_package
            - freebsd_amd64_package
            - freebsd_arm_package
            - linux_386_package
            - linux_amd64_package
            - linux_arm_package
            - linux_arm64_package
            - netbsd_386_package
            - netbsd_amd64_package
            - openbsd_386_package
            - openbsd_amd64_package
            - solaris_amd64_package
            - windows_386_package
            - windows_amd64_package
      - freebsd_386_package:
          requires:
            - build-common-layers
      - freebsd_amd64_package:
          requires:
            - build-common-layers
      - freebsd_arm_package:
          requires:
            - build-common-layers
      - linux_386_package:
          requires:
            - build-common-layers
      - linux_amd64_package:
          requires:
            - build-common-layers
      - linux_arm_package:
          requires:
            - build-common-layers
      - linux_arm64_package:
          requires:
            - build-common-layers
      - netbsd_386_package:
          requires:
            - build-common-layers
      - netbsd_amd64_package:
          requires:
            - build-common-layers
      - openbsd_386_package:
          requires:
            - build-common-layers
      - openbsd_amd64_package:
          requires:
            - build-common-layers
      - solaris_amd64_package:
          requires:
            - build-common-layers
      - windows_386_package:
          requires:
            - build-common-layers
      - windows_amd64_package:
          requires:
            - build-common-layers
