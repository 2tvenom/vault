version: "2.1"
executors:
  builder:
    docker:
      - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
  builder-machine:
    resource_class: xlarge
    machine:
      image: ubuntu-1604:202007-01
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: ui-dependencies_46d9_{{checksum ".buildcache/cache-keys/ui-dependencies-46d9ddc9b8b4f8e01ce998e608c6b25ef4a8d4f4"}}
          keys:
            - make-ui-folder_bce9_{{checksum ".buildcache/cache-keys/make-ui-folder-bce980c9e67e07303e0196494902d65cbbe3f1fb"}}
            - install-yarn_ead1_{{checksum ".buildcache/cache-keys/install-yarn-ead118201fef771b223684be1b11a96eb244d172"}}
            - set-workdir_59a5_{{checksum ".buildcache/cache-keys/set-workdir-59a56855adfc3babdb315e81dfd4acae482b7112"}}
            - install-go-tools_f4bc_{{checksum ".buildcache/cache-keys/install-go-tools-f4bc704e2a2b6b361aafa571dc84bbfd63acb837"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Layer Cache: ui-dependencies'
      - run:
          command: LAYER_SPEC_ID=06-ui-dependencies-46d9ddc9b8b4f8e01ce998e608c6b25ef4a8d4f4 make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-c6cdf1b224722d2520e082320f2a71875913247c-image
          name: Build base layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-install-go-f39f5d66161bdd79b182943a3accdd95510c4812-image
          name: Build install-go layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-install-go-tools-f4bc704e2a2b6b361aafa571dc84bbfd63acb837-image
          name: Build install-go-tools layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-set-workdir-59a56855adfc3babdb315e81dfd4acae482b7112-image
          name: Build set-workdir layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 04-install-yarn-ead118201fef771b223684be1b11a96eb244d172-image
          name: Build install-yarn layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 05-make-ui-folder-bce980c9e67e07303e0196494902d65cbbe3f1fb-image
          name: Build make-ui-folder layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 06-ui-dependencies-46d9ddc9b8b4f8e01ce998e608c6b25ef4a8d4f4-image
          name: Build ui-dependencies layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 06-ui-dependencies-46d9ddc9b8b4f8e01ce998e608c6b25ef4a8d4f4-save
          name: Build ui-dependencies layer
      - save_cache:
          paths:
            - .buildcache/archives/06-ui-dependencies-46d9ddc9b8b4f8e01ce998e608c6b25ef4a8d4f4.tar.gz
          key: ui-dependencies_46d9_{{checksum ".buildcache/cache-keys/ui-dependencies-46d9ddc9b8b4f8e01ce998e608c6b25ef4a8d4f4"}}
          name: 'Save Layer Cache: ui-dependencies'
  bundle-releases:
    executor: builder
    steps:
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-all-package-cache-keys
          name: Write all package cache keys
      - run:
          command: mkdir -p .buildcache && echo "*" > .buildcache/.gitignore
          name: Ignore .buildcache
      - restore_cache:
          key: package-b6c12ff70f70cf013c61fafabe18ce98025cb6de-{{checksum ".buildcache/cache-keys/package-b6c12ff70f70cf013c61fafabe18ce98025cb6de"}}
          name: Restore package cache
      - restore_cache:
          key: package-1405aa646537e4ef7fccdb23a3bc3d22ea25f021-{{checksum ".buildcache/cache-keys/package-1405aa646537e4ef7fccdb23a3bc3d22ea25f021"}}
          name: Restore package cache
      - restore_cache:
          key: package-809c7f5ddc40a0a2d26acf5b63543658c2c8585f-{{checksum ".buildcache/cache-keys/package-809c7f5ddc40a0a2d26acf5b63543658c2c8585f"}}
          name: Restore package cache
      - restore_cache:
          key: package-34ee55998d35bfab9a4202d0f1d37a4012580063-{{checksum ".buildcache/cache-keys/package-34ee55998d35bfab9a4202d0f1d37a4012580063"}}
          name: Restore package cache
      - restore_cache:
          key: package-0da5205147561d7daaeb22e794c17a8d13dd9f3a-{{checksum ".buildcache/cache-keys/package-0da5205147561d7daaeb22e794c17a8d13dd9f3a"}}
          name: Restore package cache
      - restore_cache:
          key: package-97ff6226c07fada7d9637e4bfc4ba1cb2fa108bf-{{checksum ".buildcache/cache-keys/package-97ff6226c07fada7d9637e4bfc4ba1cb2fa108bf"}}
          name: Restore package cache
      - restore_cache:
          key: package-6b4cb2df53dd7cc59fb67dff24a99a21f8cf2f47-{{checksum ".buildcache/cache-keys/package-6b4cb2df53dd7cc59fb67dff24a99a21f8cf2f47"}}
          name: Restore package cache
      - restore_cache:
          key: package-6ae14f2672cd07b0cafa6a334c25064f38ba1803-{{checksum ".buildcache/cache-keys/package-6ae14f2672cd07b0cafa6a334c25064f38ba1803"}}
          name: Restore package cache
      - restore_cache:
          key: package-8e4c3efeebff2b9dc15c447ed0e89e3cd72979dc-{{checksum ".buildcache/cache-keys/package-8e4c3efeebff2b9dc15c447ed0e89e3cd72979dc"}}
          name: Restore package cache
      - restore_cache:
          key: package-cd52346e9d4c4778b2239d9c0e303d86b7f03f93-{{checksum ".buildcache/cache-keys/package-cd52346e9d4c4778b2239d9c0e303d86b7f03f93"}}
          name: Restore package cache
      - restore_cache:
          key: package-88687f7c78f95ad7e60cc678b23e5453967d2e67-{{checksum ".buildcache/cache-keys/package-88687f7c78f95ad7e60cc678b23e5453967d2e67"}}
          name: Restore package cache
      - restore_cache:
          key: package-1e20fdeebef402dfaa63153843d75e84208d3780-{{checksum ".buildcache/cache-keys/package-1e20fdeebef402dfaa63153843d75e84208d3780"}}
          name: Restore package cache
      - restore_cache:
          key: package-1e62d109cfe64ac3220154f8283642bf15839705-{{checksum ".buildcache/cache-keys/package-1e62d109cfe64ac3220154f8283642bf15839705"}}
          name: Restore package cache
      - restore_cache:
          key: package-179da942975f8dc15b1437b09a60515ee30cc9ae-{{checksum ".buildcache/cache-keys/package-179da942975f8dc15b1437b09a60515ee30cc9ae"}}
          name: Restore package cache
      - restore_cache:
          key: package-aa6f7dcb1f7828e2ac7ed8198407566dfb2cda03-{{checksum ".buildcache/cache-keys/package-aa6f7dcb1f7828e2ac7ed8198407566dfb2cda03"}}
          name: Restore package cache
      - run:
          command: make package-meta-all
          name: Write Package Metadata
      - run:
          command: make aliases
          name: Write package aliases
      - run:
          command: ls -lahR .buildcache
          name: List Build Cache
      - run:
          command: cp packages*.lock/pkgs.yml lockfile-48047ea24e91e50.yml
          name: Update Lockfile Name
      - run:
          command: tar -czf packages-48047ea24e91e50.tar.gz .buildcache/packages lockfile-48047ea24e91e50.yml
          name: Create Raw Package Tarball
      - run:
          command: tar -czf meta-48047ea24e91e50.tar.gz .buildcache/packages/store/*.json lockfile-48047ea24e91e50.yml
          name: Create Metadata Tarball
      - store_artifacts:
          path: lockfile-48047ea24e91e50.yml
      - store_artifacts:
          path: packages-48047ea24e91e50.tar.gz
      - store_artifacts:
          path: meta-48047ea24e91e50.tar.gz
      - store_artifacts:
          path: .buildcache/packages
  darwin_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-b6c12ff70f70cf013c61fafabe18ce98025cb6de-{{checksum ".buildcache/cache-keys/package-b6c12ff70f70cf013c61fafabe18ce98025cb6de"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_c375_{{checksum ".buildcache/cache-keys/copy-source-c37536707658258e17cbd5990f0b0e88124766e7"}}
          keys:
            - warm-go-build-vendor-cache_01af_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-01af2589d5e1e981b1e099036e2ccac4225a3d4b"}}
            - build-ui_25c1_{{checksum ".buildcache/cache-keys/build-ui-25c1068d5eb3c5d0171ed7c9ca3ee238a70196c8"}}
            - ui-dependencies_46d9_{{checksum ".buildcache/cache-keys/ui-dependencies-46d9ddc9b8b4f8e01ce998e608c6b25ef4a8d4f4"}}
            - make-ui-folder_bce9_{{checksum ".buildcache/cache-keys/make-ui-folder-bce980c9e67e07303e0196494902d65cbbe3f1fb"}}
            - install-yarn_ead1_{{checksum ".buildcache/cache-keys/install-yarn-ead118201fef771b223684be1b11a96eb244d172"}}
            - set-workdir_59a5_{{checksum ".buildcache/cache-keys/set-workdir-59a56855adfc3babdb315e81dfd4acae482b7112"}}
            - install-go-tools_f4bc_{{checksum ".buildcache/cache-keys/install-go-tools-f4bc704e2a2b6b361aafa571dc84bbfd63acb837"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-b6c12ff70f70cf013c61fafabe18ce98025cb6de-{{checksum ".buildcache/cache-keys/package-b6c12ff70f70cf013c61fafabe18ce98025cb6de"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: b6c12ff70f70cf013c61fafabe18ce98025cb6de
  freebsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-1405aa646537e4ef7fccdb23a3bc3d22ea25f021-{{checksum ".buildcache/cache-keys/package-1405aa646537e4ef7fccdb23a3bc3d22ea25f021"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_c375_{{checksum ".buildcache/cache-keys/copy-source-c37536707658258e17cbd5990f0b0e88124766e7"}}
          keys:
            - warm-go-build-vendor-cache_01af_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-01af2589d5e1e981b1e099036e2ccac4225a3d4b"}}
            - build-ui_25c1_{{checksum ".buildcache/cache-keys/build-ui-25c1068d5eb3c5d0171ed7c9ca3ee238a70196c8"}}
            - ui-dependencies_46d9_{{checksum ".buildcache/cache-keys/ui-dependencies-46d9ddc9b8b4f8e01ce998e608c6b25ef4a8d4f4"}}
            - make-ui-folder_bce9_{{checksum ".buildcache/cache-keys/make-ui-folder-bce980c9e67e07303e0196494902d65cbbe3f1fb"}}
            - install-yarn_ead1_{{checksum ".buildcache/cache-keys/install-yarn-ead118201fef771b223684be1b11a96eb244d172"}}
            - set-workdir_59a5_{{checksum ".buildcache/cache-keys/set-workdir-59a56855adfc3babdb315e81dfd4acae482b7112"}}
            - install-go-tools_f4bc_{{checksum ".buildcache/cache-keys/install-go-tools-f4bc704e2a2b6b361aafa571dc84bbfd63acb837"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-1405aa646537e4ef7fccdb23a3bc3d22ea25f021-{{checksum ".buildcache/cache-keys/package-1405aa646537e4ef7fccdb23a3bc3d22ea25f021"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 1405aa646537e4ef7fccdb23a3bc3d22ea25f021
  freebsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-809c7f5ddc40a0a2d26acf5b63543658c2c8585f-{{checksum ".buildcache/cache-keys/package-809c7f5ddc40a0a2d26acf5b63543658c2c8585f"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_c375_{{checksum ".buildcache/cache-keys/copy-source-c37536707658258e17cbd5990f0b0e88124766e7"}}
          keys:
            - warm-go-build-vendor-cache_01af_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-01af2589d5e1e981b1e099036e2ccac4225a3d4b"}}
            - build-ui_25c1_{{checksum ".buildcache/cache-keys/build-ui-25c1068d5eb3c5d0171ed7c9ca3ee238a70196c8"}}
            - ui-dependencies_46d9_{{checksum ".buildcache/cache-keys/ui-dependencies-46d9ddc9b8b4f8e01ce998e608c6b25ef4a8d4f4"}}
            - make-ui-folder_bce9_{{checksum ".buildcache/cache-keys/make-ui-folder-bce980c9e67e07303e0196494902d65cbbe3f1fb"}}
            - install-yarn_ead1_{{checksum ".buildcache/cache-keys/install-yarn-ead118201fef771b223684be1b11a96eb244d172"}}
            - set-workdir_59a5_{{checksum ".buildcache/cache-keys/set-workdir-59a56855adfc3babdb315e81dfd4acae482b7112"}}
            - install-go-tools_f4bc_{{checksum ".buildcache/cache-keys/install-go-tools-f4bc704e2a2b6b361aafa571dc84bbfd63acb837"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-809c7f5ddc40a0a2d26acf5b63543658c2c8585f-{{checksum ".buildcache/cache-keys/package-809c7f5ddc40a0a2d26acf5b63543658c2c8585f"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 809c7f5ddc40a0a2d26acf5b63543658c2c8585f
  freebsd_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-34ee55998d35bfab9a4202d0f1d37a4012580063-{{checksum ".buildcache/cache-keys/package-34ee55998d35bfab9a4202d0f1d37a4012580063"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_c375_{{checksum ".buildcache/cache-keys/copy-source-c37536707658258e17cbd5990f0b0e88124766e7"}}
          keys:
            - warm-go-build-vendor-cache_01af_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-01af2589d5e1e981b1e099036e2ccac4225a3d4b"}}
            - build-ui_25c1_{{checksum ".buildcache/cache-keys/build-ui-25c1068d5eb3c5d0171ed7c9ca3ee238a70196c8"}}
            - ui-dependencies_46d9_{{checksum ".buildcache/cache-keys/ui-dependencies-46d9ddc9b8b4f8e01ce998e608c6b25ef4a8d4f4"}}
            - make-ui-folder_bce9_{{checksum ".buildcache/cache-keys/make-ui-folder-bce980c9e67e07303e0196494902d65cbbe3f1fb"}}
            - install-yarn_ead1_{{checksum ".buildcache/cache-keys/install-yarn-ead118201fef771b223684be1b11a96eb244d172"}}
            - set-workdir_59a5_{{checksum ".buildcache/cache-keys/set-workdir-59a56855adfc3babdb315e81dfd4acae482b7112"}}
            - install-go-tools_f4bc_{{checksum ".buildcache/cache-keys/install-go-tools-f4bc704e2a2b6b361aafa571dc84bbfd63acb837"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-34ee55998d35bfab9a4202d0f1d37a4012580063-{{checksum ".buildcache/cache-keys/package-34ee55998d35bfab9a4202d0f1d37a4012580063"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 34ee55998d35bfab9a4202d0f1d37a4012580063
  linux_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-0da5205147561d7daaeb22e794c17a8d13dd9f3a-{{checksum ".buildcache/cache-keys/package-0da5205147561d7daaeb22e794c17a8d13dd9f3a"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_c375_{{checksum ".buildcache/cache-keys/copy-source-c37536707658258e17cbd5990f0b0e88124766e7"}}
          keys:
            - warm-go-build-vendor-cache_01af_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-01af2589d5e1e981b1e099036e2ccac4225a3d4b"}}
            - build-ui_25c1_{{checksum ".buildcache/cache-keys/build-ui-25c1068d5eb3c5d0171ed7c9ca3ee238a70196c8"}}
            - ui-dependencies_46d9_{{checksum ".buildcache/cache-keys/ui-dependencies-46d9ddc9b8b4f8e01ce998e608c6b25ef4a8d4f4"}}
            - make-ui-folder_bce9_{{checksum ".buildcache/cache-keys/make-ui-folder-bce980c9e67e07303e0196494902d65cbbe3f1fb"}}
            - install-yarn_ead1_{{checksum ".buildcache/cache-keys/install-yarn-ead118201fef771b223684be1b11a96eb244d172"}}
            - set-workdir_59a5_{{checksum ".buildcache/cache-keys/set-workdir-59a56855adfc3babdb315e81dfd4acae482b7112"}}
            - install-go-tools_f4bc_{{checksum ".buildcache/cache-keys/install-go-tools-f4bc704e2a2b6b361aafa571dc84bbfd63acb837"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-0da5205147561d7daaeb22e794c17a8d13dd9f3a-{{checksum ".buildcache/cache-keys/package-0da5205147561d7daaeb22e794c17a8d13dd9f3a"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 0da5205147561d7daaeb22e794c17a8d13dd9f3a
  linux_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-97ff6226c07fada7d9637e4bfc4ba1cb2fa108bf-{{checksum ".buildcache/cache-keys/package-97ff6226c07fada7d9637e4bfc4ba1cb2fa108bf"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_c375_{{checksum ".buildcache/cache-keys/copy-source-c37536707658258e17cbd5990f0b0e88124766e7"}}
          keys:
            - warm-go-build-vendor-cache_01af_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-01af2589d5e1e981b1e099036e2ccac4225a3d4b"}}
            - build-ui_25c1_{{checksum ".buildcache/cache-keys/build-ui-25c1068d5eb3c5d0171ed7c9ca3ee238a70196c8"}}
            - ui-dependencies_46d9_{{checksum ".buildcache/cache-keys/ui-dependencies-46d9ddc9b8b4f8e01ce998e608c6b25ef4a8d4f4"}}
            - make-ui-folder_bce9_{{checksum ".buildcache/cache-keys/make-ui-folder-bce980c9e67e07303e0196494902d65cbbe3f1fb"}}
            - install-yarn_ead1_{{checksum ".buildcache/cache-keys/install-yarn-ead118201fef771b223684be1b11a96eb244d172"}}
            - set-workdir_59a5_{{checksum ".buildcache/cache-keys/set-workdir-59a56855adfc3babdb315e81dfd4acae482b7112"}}
            - install-go-tools_f4bc_{{checksum ".buildcache/cache-keys/install-go-tools-f4bc704e2a2b6b361aafa571dc84bbfd63acb837"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-97ff6226c07fada7d9637e4bfc4ba1cb2fa108bf-{{checksum ".buildcache/cache-keys/package-97ff6226c07fada7d9637e4bfc4ba1cb2fa108bf"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 97ff6226c07fada7d9637e4bfc4ba1cb2fa108bf
  linux_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-6b4cb2df53dd7cc59fb67dff24a99a21f8cf2f47-{{checksum ".buildcache/cache-keys/package-6b4cb2df53dd7cc59fb67dff24a99a21f8cf2f47"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_c375_{{checksum ".buildcache/cache-keys/copy-source-c37536707658258e17cbd5990f0b0e88124766e7"}}
          keys:
            - warm-go-build-vendor-cache_01af_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-01af2589d5e1e981b1e099036e2ccac4225a3d4b"}}
            - build-ui_25c1_{{checksum ".buildcache/cache-keys/build-ui-25c1068d5eb3c5d0171ed7c9ca3ee238a70196c8"}}
            - ui-dependencies_46d9_{{checksum ".buildcache/cache-keys/ui-dependencies-46d9ddc9b8b4f8e01ce998e608c6b25ef4a8d4f4"}}
            - make-ui-folder_bce9_{{checksum ".buildcache/cache-keys/make-ui-folder-bce980c9e67e07303e0196494902d65cbbe3f1fb"}}
            - install-yarn_ead1_{{checksum ".buildcache/cache-keys/install-yarn-ead118201fef771b223684be1b11a96eb244d172"}}
            - set-workdir_59a5_{{checksum ".buildcache/cache-keys/set-workdir-59a56855adfc3babdb315e81dfd4acae482b7112"}}
            - install-go-tools_f4bc_{{checksum ".buildcache/cache-keys/install-go-tools-f4bc704e2a2b6b361aafa571dc84bbfd63acb837"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-6b4cb2df53dd7cc59fb67dff24a99a21f8cf2f47-{{checksum ".buildcache/cache-keys/package-6b4cb2df53dd7cc59fb67dff24a99a21f8cf2f47"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 6b4cb2df53dd7cc59fb67dff24a99a21f8cf2f47
  linux_arm64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-6ae14f2672cd07b0cafa6a334c25064f38ba1803-{{checksum ".buildcache/cache-keys/package-6ae14f2672cd07b0cafa6a334c25064f38ba1803"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_c375_{{checksum ".buildcache/cache-keys/copy-source-c37536707658258e17cbd5990f0b0e88124766e7"}}
          keys:
            - warm-go-build-vendor-cache_01af_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-01af2589d5e1e981b1e099036e2ccac4225a3d4b"}}
            - build-ui_25c1_{{checksum ".buildcache/cache-keys/build-ui-25c1068d5eb3c5d0171ed7c9ca3ee238a70196c8"}}
            - ui-dependencies_46d9_{{checksum ".buildcache/cache-keys/ui-dependencies-46d9ddc9b8b4f8e01ce998e608c6b25ef4a8d4f4"}}
            - make-ui-folder_bce9_{{checksum ".buildcache/cache-keys/make-ui-folder-bce980c9e67e07303e0196494902d65cbbe3f1fb"}}
            - install-yarn_ead1_{{checksum ".buildcache/cache-keys/install-yarn-ead118201fef771b223684be1b11a96eb244d172"}}
            - set-workdir_59a5_{{checksum ".buildcache/cache-keys/set-workdir-59a56855adfc3babdb315e81dfd4acae482b7112"}}
            - install-go-tools_f4bc_{{checksum ".buildcache/cache-keys/install-go-tools-f4bc704e2a2b6b361aafa571dc84bbfd63acb837"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-6ae14f2672cd07b0cafa6a334c25064f38ba1803-{{checksum ".buildcache/cache-keys/package-6ae14f2672cd07b0cafa6a334c25064f38ba1803"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 6ae14f2672cd07b0cafa6a334c25064f38ba1803
  netbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-8e4c3efeebff2b9dc15c447ed0e89e3cd72979dc-{{checksum ".buildcache/cache-keys/package-8e4c3efeebff2b9dc15c447ed0e89e3cd72979dc"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_c375_{{checksum ".buildcache/cache-keys/copy-source-c37536707658258e17cbd5990f0b0e88124766e7"}}
          keys:
            - warm-go-build-vendor-cache_01af_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-01af2589d5e1e981b1e099036e2ccac4225a3d4b"}}
            - build-ui_25c1_{{checksum ".buildcache/cache-keys/build-ui-25c1068d5eb3c5d0171ed7c9ca3ee238a70196c8"}}
            - ui-dependencies_46d9_{{checksum ".buildcache/cache-keys/ui-dependencies-46d9ddc9b8b4f8e01ce998e608c6b25ef4a8d4f4"}}
            - make-ui-folder_bce9_{{checksum ".buildcache/cache-keys/make-ui-folder-bce980c9e67e07303e0196494902d65cbbe3f1fb"}}
            - install-yarn_ead1_{{checksum ".buildcache/cache-keys/install-yarn-ead118201fef771b223684be1b11a96eb244d172"}}
            - set-workdir_59a5_{{checksum ".buildcache/cache-keys/set-workdir-59a56855adfc3babdb315e81dfd4acae482b7112"}}
            - install-go-tools_f4bc_{{checksum ".buildcache/cache-keys/install-go-tools-f4bc704e2a2b6b361aafa571dc84bbfd63acb837"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-8e4c3efeebff2b9dc15c447ed0e89e3cd72979dc-{{checksum ".buildcache/cache-keys/package-8e4c3efeebff2b9dc15c447ed0e89e3cd72979dc"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 8e4c3efeebff2b9dc15c447ed0e89e3cd72979dc
  netbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-cd52346e9d4c4778b2239d9c0e303d86b7f03f93-{{checksum ".buildcache/cache-keys/package-cd52346e9d4c4778b2239d9c0e303d86b7f03f93"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_c375_{{checksum ".buildcache/cache-keys/copy-source-c37536707658258e17cbd5990f0b0e88124766e7"}}
          keys:
            - warm-go-build-vendor-cache_01af_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-01af2589d5e1e981b1e099036e2ccac4225a3d4b"}}
            - build-ui_25c1_{{checksum ".buildcache/cache-keys/build-ui-25c1068d5eb3c5d0171ed7c9ca3ee238a70196c8"}}
            - ui-dependencies_46d9_{{checksum ".buildcache/cache-keys/ui-dependencies-46d9ddc9b8b4f8e01ce998e608c6b25ef4a8d4f4"}}
            - make-ui-folder_bce9_{{checksum ".buildcache/cache-keys/make-ui-folder-bce980c9e67e07303e0196494902d65cbbe3f1fb"}}
            - install-yarn_ead1_{{checksum ".buildcache/cache-keys/install-yarn-ead118201fef771b223684be1b11a96eb244d172"}}
            - set-workdir_59a5_{{checksum ".buildcache/cache-keys/set-workdir-59a56855adfc3babdb315e81dfd4acae482b7112"}}
            - install-go-tools_f4bc_{{checksum ".buildcache/cache-keys/install-go-tools-f4bc704e2a2b6b361aafa571dc84bbfd63acb837"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-cd52346e9d4c4778b2239d9c0e303d86b7f03f93-{{checksum ".buildcache/cache-keys/package-cd52346e9d4c4778b2239d9c0e303d86b7f03f93"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: cd52346e9d4c4778b2239d9c0e303d86b7f03f93
  openbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-88687f7c78f95ad7e60cc678b23e5453967d2e67-{{checksum ".buildcache/cache-keys/package-88687f7c78f95ad7e60cc678b23e5453967d2e67"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_c375_{{checksum ".buildcache/cache-keys/copy-source-c37536707658258e17cbd5990f0b0e88124766e7"}}
          keys:
            - warm-go-build-vendor-cache_01af_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-01af2589d5e1e981b1e099036e2ccac4225a3d4b"}}
            - build-ui_25c1_{{checksum ".buildcache/cache-keys/build-ui-25c1068d5eb3c5d0171ed7c9ca3ee238a70196c8"}}
            - ui-dependencies_46d9_{{checksum ".buildcache/cache-keys/ui-dependencies-46d9ddc9b8b4f8e01ce998e608c6b25ef4a8d4f4"}}
            - make-ui-folder_bce9_{{checksum ".buildcache/cache-keys/make-ui-folder-bce980c9e67e07303e0196494902d65cbbe3f1fb"}}
            - install-yarn_ead1_{{checksum ".buildcache/cache-keys/install-yarn-ead118201fef771b223684be1b11a96eb244d172"}}
            - set-workdir_59a5_{{checksum ".buildcache/cache-keys/set-workdir-59a56855adfc3babdb315e81dfd4acae482b7112"}}
            - install-go-tools_f4bc_{{checksum ".buildcache/cache-keys/install-go-tools-f4bc704e2a2b6b361aafa571dc84bbfd63acb837"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-88687f7c78f95ad7e60cc678b23e5453967d2e67-{{checksum ".buildcache/cache-keys/package-88687f7c78f95ad7e60cc678b23e5453967d2e67"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 88687f7c78f95ad7e60cc678b23e5453967d2e67
  openbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-1e20fdeebef402dfaa63153843d75e84208d3780-{{checksum ".buildcache/cache-keys/package-1e20fdeebef402dfaa63153843d75e84208d3780"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_c375_{{checksum ".buildcache/cache-keys/copy-source-c37536707658258e17cbd5990f0b0e88124766e7"}}
          keys:
            - warm-go-build-vendor-cache_01af_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-01af2589d5e1e981b1e099036e2ccac4225a3d4b"}}
            - build-ui_25c1_{{checksum ".buildcache/cache-keys/build-ui-25c1068d5eb3c5d0171ed7c9ca3ee238a70196c8"}}
            - ui-dependencies_46d9_{{checksum ".buildcache/cache-keys/ui-dependencies-46d9ddc9b8b4f8e01ce998e608c6b25ef4a8d4f4"}}
            - make-ui-folder_bce9_{{checksum ".buildcache/cache-keys/make-ui-folder-bce980c9e67e07303e0196494902d65cbbe3f1fb"}}
            - install-yarn_ead1_{{checksum ".buildcache/cache-keys/install-yarn-ead118201fef771b223684be1b11a96eb244d172"}}
            - set-workdir_59a5_{{checksum ".buildcache/cache-keys/set-workdir-59a56855adfc3babdb315e81dfd4acae482b7112"}}
            - install-go-tools_f4bc_{{checksum ".buildcache/cache-keys/install-go-tools-f4bc704e2a2b6b361aafa571dc84bbfd63acb837"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-1e20fdeebef402dfaa63153843d75e84208d3780-{{checksum ".buildcache/cache-keys/package-1e20fdeebef402dfaa63153843d75e84208d3780"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 1e20fdeebef402dfaa63153843d75e84208d3780
  solaris_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-1e62d109cfe64ac3220154f8283642bf15839705-{{checksum ".buildcache/cache-keys/package-1e62d109cfe64ac3220154f8283642bf15839705"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_c375_{{checksum ".buildcache/cache-keys/copy-source-c37536707658258e17cbd5990f0b0e88124766e7"}}
          keys:
            - warm-go-build-vendor-cache_01af_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-01af2589d5e1e981b1e099036e2ccac4225a3d4b"}}
            - build-ui_25c1_{{checksum ".buildcache/cache-keys/build-ui-25c1068d5eb3c5d0171ed7c9ca3ee238a70196c8"}}
            - ui-dependencies_46d9_{{checksum ".buildcache/cache-keys/ui-dependencies-46d9ddc9b8b4f8e01ce998e608c6b25ef4a8d4f4"}}
            - make-ui-folder_bce9_{{checksum ".buildcache/cache-keys/make-ui-folder-bce980c9e67e07303e0196494902d65cbbe3f1fb"}}
            - install-yarn_ead1_{{checksum ".buildcache/cache-keys/install-yarn-ead118201fef771b223684be1b11a96eb244d172"}}
            - set-workdir_59a5_{{checksum ".buildcache/cache-keys/set-workdir-59a56855adfc3babdb315e81dfd4acae482b7112"}}
            - install-go-tools_f4bc_{{checksum ".buildcache/cache-keys/install-go-tools-f4bc704e2a2b6b361aafa571dc84bbfd63acb837"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-1e62d109cfe64ac3220154f8283642bf15839705-{{checksum ".buildcache/cache-keys/package-1e62d109cfe64ac3220154f8283642bf15839705"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 1e62d109cfe64ac3220154f8283642bf15839705
  windows_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-179da942975f8dc15b1437b09a60515ee30cc9ae-{{checksum ".buildcache/cache-keys/package-179da942975f8dc15b1437b09a60515ee30cc9ae"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_c375_{{checksum ".buildcache/cache-keys/copy-source-c37536707658258e17cbd5990f0b0e88124766e7"}}
          keys:
            - warm-go-build-vendor-cache_01af_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-01af2589d5e1e981b1e099036e2ccac4225a3d4b"}}
            - build-ui_25c1_{{checksum ".buildcache/cache-keys/build-ui-25c1068d5eb3c5d0171ed7c9ca3ee238a70196c8"}}
            - ui-dependencies_46d9_{{checksum ".buildcache/cache-keys/ui-dependencies-46d9ddc9b8b4f8e01ce998e608c6b25ef4a8d4f4"}}
            - make-ui-folder_bce9_{{checksum ".buildcache/cache-keys/make-ui-folder-bce980c9e67e07303e0196494902d65cbbe3f1fb"}}
            - install-yarn_ead1_{{checksum ".buildcache/cache-keys/install-yarn-ead118201fef771b223684be1b11a96eb244d172"}}
            - set-workdir_59a5_{{checksum ".buildcache/cache-keys/set-workdir-59a56855adfc3babdb315e81dfd4acae482b7112"}}
            - install-go-tools_f4bc_{{checksum ".buildcache/cache-keys/install-go-tools-f4bc704e2a2b6b361aafa571dc84bbfd63acb837"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-179da942975f8dc15b1437b09a60515ee30cc9ae-{{checksum ".buildcache/cache-keys/package-179da942975f8dc15b1437b09a60515ee30cc9ae"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 179da942975f8dc15b1437b09a60515ee30cc9ae
  windows_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-aa6f7dcb1f7828e2ac7ed8198407566dfb2cda03-{{checksum ".buildcache/cache-keys/package-aa6f7dcb1f7828e2ac7ed8198407566dfb2cda03"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_c375_{{checksum ".buildcache/cache-keys/copy-source-c37536707658258e17cbd5990f0b0e88124766e7"}}
          keys:
            - warm-go-build-vendor-cache_01af_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-01af2589d5e1e981b1e099036e2ccac4225a3d4b"}}
            - build-ui_25c1_{{checksum ".buildcache/cache-keys/build-ui-25c1068d5eb3c5d0171ed7c9ca3ee238a70196c8"}}
            - ui-dependencies_46d9_{{checksum ".buildcache/cache-keys/ui-dependencies-46d9ddc9b8b4f8e01ce998e608c6b25ef4a8d4f4"}}
            - make-ui-folder_bce9_{{checksum ".buildcache/cache-keys/make-ui-folder-bce980c9e67e07303e0196494902d65cbbe3f1fb"}}
            - install-yarn_ead1_{{checksum ".buildcache/cache-keys/install-yarn-ead118201fef771b223684be1b11a96eb244d172"}}
            - set-workdir_59a5_{{checksum ".buildcache/cache-keys/set-workdir-59a56855adfc3babdb315e81dfd4acae482b7112"}}
            - install-go-tools_f4bc_{{checksum ".buildcache/cache-keys/install-go-tools-f4bc704e2a2b6b361aafa571dc84bbfd63acb837"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-aa6f7dcb1f7828e2ac7ed8198407566dfb2cda03-{{checksum ".buildcache/cache-keys/package-aa6f7dcb1f7828e2ac7ed8198407566dfb2cda03"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: aa6f7dcb1f7828e2ac7ed8198407566dfb2cda03
workflows:
  build-48047ea24e91e50:
    jobs:
      - build-common-layers: {}
      - darwin_amd64_package:
          requires:
            - build-common-layers
      - bundle-releases:
          requires:
            - darwin_amd64_package
            - freebsd_386_package
            - freebsd_amd64_package
            - freebsd_arm_package
            - linux_386_package
            - linux_amd64_package
            - linux_arm_package
            - linux_arm64_package
            - netbsd_386_package
            - netbsd_amd64_package
            - openbsd_386_package
            - openbsd_amd64_package
            - solaris_amd64_package
            - windows_386_package
            - windows_amd64_package
      - freebsd_386_package:
          requires:
            - build-common-layers
      - freebsd_amd64_package:
          requires:
            - build-common-layers
      - freebsd_arm_package:
          requires:
            - build-common-layers
      - linux_386_package:
          requires:
            - build-common-layers
      - linux_amd64_package:
          requires:
            - build-common-layers
      - linux_arm_package:
          requires:
            - build-common-layers
      - linux_arm64_package:
          requires:
            - build-common-layers
      - netbsd_386_package:
          requires:
            - build-common-layers
      - netbsd_amd64_package:
          requires:
            - build-common-layers
      - openbsd_386_package:
          requires:
            - build-common-layers
      - openbsd_amd64_package:
          requires:
            - build-common-layers
      - solaris_amd64_package:
          requires:
            - build-common-layers
      - windows_386_package:
          requires:
            - build-common-layers
      - windows_amd64_package:
          requires:
            - build-common-layers
